#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL_DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_KHOHANG")]
	public partial class QuanLyKhoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHITIETPHIEUDAT(CHITIETPHIEUDAT instance);
    partial void UpdateCHITIETPHIEUDAT(CHITIETPHIEUDAT instance);
    partial void DeleteCHITIETPHIEUDAT(CHITIETPHIEUDAT instance);
    partial void InsertYEUCAUXUATHANG(YEUCAUXUATHANG instance);
    partial void UpdateYEUCAUXUATHANG(YEUCAUXUATHANG instance);
    partial void DeleteYEUCAUXUATHANG(YEUCAUXUATHANG instance);
    partial void InsertCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    partial void UpdateCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    partial void DeleteCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    partial void InsertCHITIETPHIEUXUAT(CHITIETPHIEUXUAT instance);
    partial void UpdateCHITIETPHIEUXUAT(CHITIETPHIEUXUAT instance);
    partial void DeleteCHITIETPHIEUXUAT(CHITIETPHIEUXUAT instance);
    partial void InsertCHITIETYCXUATHANG(CHITIETYCXUATHANG instance);
    partial void UpdateCHITIETYCXUATHANG(CHITIETYCXUATHANG instance);
    partial void DeleteCHITIETYCXUATHANG(CHITIETYCXUATHANG instance);
    partial void InsertCHITTIETCHUYENHANG(CHITTIETCHUYENHANG instance);
    partial void UpdateCHITTIETCHUYENHANG(CHITTIETCHUYENHANG instance);
    partial void DeleteCHITTIETCHUYENHANG(CHITTIETCHUYENHANG instance);
    partial void InsertDANHMUCSANPHAM(DANHMUCSANPHAM instance);
    partial void UpdateDANHMUCSANPHAM(DANHMUCSANPHAM instance);
    partial void DeleteDANHMUCSANPHAM(DANHMUCSANPHAM instance);
    partial void InsertLOAISANPHAM(LOAISANPHAM instance);
    partial void UpdateLOAISANPHAM(LOAISANPHAM instance);
    partial void DeleteLOAISANPHAM(LOAISANPHAM instance);
    partial void InsertMANHINH(MANHINH instance);
    partial void UpdateMANHINH(MANHINH instance);
    partial void DeleteMANHINH(MANHINH instance);
    partial void InsertNGUOIDUNG(NGUOIDUNG instance);
    partial void UpdateNGUOIDUNG(NGUOIDUNG instance);
    partial void DeleteNGUOIDUNG(NGUOIDUNG instance);
    partial void InsertNGUOIDUNGNHOMNGUOIDUNG(NGUOIDUNGNHOMNGUOIDUNG instance);
    partial void UpdateNGUOIDUNGNHOMNGUOIDUNG(NGUOIDUNGNHOMNGUOIDUNG instance);
    partial void DeleteNGUOIDUNGNHOMNGUOIDUNG(NGUOIDUNGNHOMNGUOIDUNG instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void UpdateNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void DeleteNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertPHIEUDAT(PHIEUDAT instance);
    partial void UpdatePHIEUDAT(PHIEUDAT instance);
    partial void DeletePHIEUDAT(PHIEUDAT instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertPHIEUXUAT(PHIEUXUAT instance);
    partial void UpdatePHIEUXUAT(PHIEUXUAT instance);
    partial void DeletePHIEUXUAT(PHIEUXUAT instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTHONGTINKHO(THONGTINKHO instance);
    partial void UpdateTHONGTINKHO(THONGTINKHO instance);
    partial void DeleteTHONGTINKHO(THONGTINKHO instance);
    partial void InsertYEUCAUCHUYENHANG(YEUCAUCHUYENHANG instance);
    partial void UpdateYEUCAUCHUYENHANG(YEUCAUCHUYENHANG instance);
    partial void DeleteYEUCAUCHUYENHANG(YEUCAUCHUYENHANG instance);
    #endregion
		
		public QuanLyKhoDataContext() : 
				base(global::BLL_DAL.Properties.Settings.Default.QL_KHOHANGConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyKhoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyKhoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyKhoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyKhoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHITIETPHIEUDAT> CHITIETPHIEUDATs
		{
			get
			{
				return this.GetTable<CHITIETPHIEUDAT>();
			}
		}
		
		public System.Data.Linq.Table<YEUCAUXUATHANG> YEUCAUXUATHANGs
		{
			get
			{
				return this.GetTable<YEUCAUXUATHANG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this.GetTable<CHITIETPHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPHIEUXUAT> CHITIETPHIEUXUATs
		{
			get
			{
				return this.GetTable<CHITIETPHIEUXUAT>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETYCXUATHANG> CHITIETYCXUATHANGs
		{
			get
			{
				return this.GetTable<CHITIETYCXUATHANG>();
			}
		}
		
		public System.Data.Linq.Table<CHITTIETCHUYENHANG> CHITTIETCHUYENHANGs
		{
			get
			{
				return this.GetTable<CHITTIETCHUYENHANG>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUCSANPHAM> DANHMUCSANPHAMs
		{
			get
			{
				return this.GetTable<DANHMUCSANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<LOAISANPHAM> LOAISANPHAMs
		{
			get
			{
				return this.GetTable<LOAISANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<MANHINH> MANHINHs
		{
			get
			{
				return this.GetTable<MANHINH>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this.GetTable<NGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIDUNGNHOMNGUOIDUNG> NGUOIDUNGNHOMNGUOIDUNGs
		{
			get
			{
				return this.GetTable<NGUOIDUNGNHOMNGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHOMNGUOIDUNG> NHOMNGUOIDUNGs
		{
			get
			{
				return this.GetTable<NHOMNGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUDAT> PHIEUDATs
		{
			get
			{
				return this.GetTable<PHIEUDAT>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUXUAT> PHIEUXUATs
		{
			get
			{
				return this.GetTable<PHIEUXUAT>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<THONGTINKHO> THONGTINKHOs
		{
			get
			{
				return this.GetTable<THONGTINKHO>();
			}
		}
		
		public System.Data.Linq.Table<YEUCAUCHUYENHANG> YEUCAUCHUYENHANGs
		{
			get
			{
				return this.GetTable<YEUCAUCHUYENHANG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPHIEUDAT")]
	public partial class CHITIETPHIEUDAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PD;
		
		private int _ID_SP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _THANHTIEN;
		
		private EntityRef<PHIEUDAT> _PHIEUDAT;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PDChanging(int value);
    partial void OnID_PDChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnTHANHTIENChanging(System.Nullable<double> value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public CHITIETPHIEUDAT()
		{
			this._PHIEUDAT = default(EntityRef<PHIEUDAT>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PD
		{
			get
			{
				return this._ID_PD;
			}
			set
			{
				if ((this._ID_PD != value))
				{
					if (this._PHIEUDAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PDChanging(value);
					this.SendPropertyChanging();
					this._ID_PD = value;
					this.SendPropertyChanged("ID_PD");
					this.OnID_PDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Float")]
		public System.Nullable<double> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDAT_CHITIETPHIEUDAT", Storage="_PHIEUDAT", ThisKey="ID_PD", OtherKey="ID_PD", IsForeignKey=true)]
		public PHIEUDAT PHIEUDAT
		{
			get
			{
				return this._PHIEUDAT.Entity;
			}
			set
			{
				PHIEUDAT previousValue = this._PHIEUDAT.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUDAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUDAT.Entity = null;
						previousValue.CHITIETPHIEUDATs.Remove(this);
					}
					this._PHIEUDAT.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUDATs.Add(this);
						this._ID_PD = value.ID_PD;
					}
					else
					{
						this._ID_PD = default(int);
					}
					this.SendPropertyChanged("PHIEUDAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPHIEUDAT", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETPHIEUDATs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUDATs.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YEUCAUXUATHANG")]
	public partial class YEUCAUXUATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_YCXH;
		
		private string _ID_DN;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<double> _TONGTIEN;
		
		private EntitySet<CHITIETYCXUATHANG> _CHITIETYCXUATHANGs;
		
		private EntitySet<PHIEUXUAT> _PHIEUXUATs;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_YCXHChanging(int value);
    partial void OnID_YCXHChanged();
    partial void OnID_DNChanging(string value);
    partial void OnID_DNChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public YEUCAUXUATHANG()
		{
			this._CHITIETYCXUATHANGs = new EntitySet<CHITIETYCXUATHANG>(new Action<CHITIETYCXUATHANG>(this.attach_CHITIETYCXUATHANGs), new Action<CHITIETYCXUATHANG>(this.detach_CHITIETYCXUATHANGs));
			this._PHIEUXUATs = new EntitySet<PHIEUXUAT>(new Action<PHIEUXUAT>(this.attach_PHIEUXUATs), new Action<PHIEUXUAT>(this.detach_PHIEUXUATs));
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_YCXH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_YCXH
		{
			get
			{
				return this._ID_YCXH;
			}
			set
			{
				if ((this._ID_YCXH != value))
				{
					this.OnID_YCXHChanging(value);
					this.SendPropertyChanging();
					this._ID_YCXH = value;
					this.SendPropertyChanged("ID_YCXH");
					this.OnID_YCXHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DN", DbType="VarChar(10)")]
		public string ID_DN
		{
			get
			{
				return this._ID_DN;
			}
			set
			{
				if ((this._ID_DN != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DNChanging(value);
					this.SendPropertyChanging();
					this._ID_DN = value;
					this.SendPropertyChanged("ID_DN");
					this.OnID_DNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YEUCAUXUATHANG_CHITIETYCXUATHANG", Storage="_CHITIETYCXUATHANGs", ThisKey="ID_YCXH", OtherKey="ID_YCXH")]
		public EntitySet<CHITIETYCXUATHANG> CHITIETYCXUATHANGs
		{
			get
			{
				return this._CHITIETYCXUATHANGs;
			}
			set
			{
				this._CHITIETYCXUATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YEUCAUXUATHANG_PHIEUXUAT", Storage="_PHIEUXUATs", ThisKey="ID_YCXH", OtherKey="ID_YCXH")]
		public EntitySet<PHIEUXUAT> PHIEUXUATs
		{
			get
			{
				return this._PHIEUXUATs;
			}
			set
			{
				this._PHIEUXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_YEUCAUXUATHANG", Storage="_NGUOIDUNG", ThisKey="ID_DN", OtherKey="ID_DN", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.YEUCAUXUATHANGs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.YEUCAUXUATHANGs.Add(this);
						this._ID_DN = value.ID_DN;
					}
					else
					{
						this._ID_DN = default(string);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETYCXUATHANGs(CHITIETYCXUATHANG entity)
		{
			this.SendPropertyChanging();
			entity.YEUCAUXUATHANG = this;
		}
		
		private void detach_CHITIETYCXUATHANGs(CHITIETYCXUATHANG entity)
		{
			this.SendPropertyChanging();
			entity.YEUCAUXUATHANG = null;
		}
		
		private void attach_PHIEUXUATs(PHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.YEUCAUXUATHANG = this;
		}
		
		private void detach_PHIEUXUATs(PHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.YEUCAUXUATHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPHIEUNHAP")]
	public partial class CHITIETPHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PN;
		
		private System.Nullable<int> _ID_PD;
		
		private int _ID_SP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _DONGIANHAP;
		
		private System.Nullable<double> _DONGIABAN;
		
		private System.Nullable<System.DateTime> _HANSD;
		
		private System.Nullable<double> _THANHTIEN;
		
		private EntityRef<PHIEUDAT> _PHIEUDAT;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PNChanging(int value);
    partial void OnID_PNChanged();
    partial void OnID_PDChanging(System.Nullable<int> value);
    partial void OnID_PDChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDONGIANHAPChanging(System.Nullable<double> value);
    partial void OnDONGIANHAPChanged();
    partial void OnDONGIABANChanging(System.Nullable<double> value);
    partial void OnDONGIABANChanged();
    partial void OnHANSDChanging(System.Nullable<System.DateTime> value);
    partial void OnHANSDChanged();
    partial void OnTHANHTIENChanging(System.Nullable<double> value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public CHITIETPHIEUNHAP()
		{
			this._PHIEUDAT = default(EntityRef<PHIEUDAT>);
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PN
		{
			get
			{
				return this._ID_PN;
			}
			set
			{
				if ((this._ID_PN != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PNChanging(value);
					this.SendPropertyChanging();
					this._ID_PN = value;
					this.SendPropertyChanged("ID_PN");
					this.OnID_PNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PD", DbType="Int")]
		public System.Nullable<int> ID_PD
		{
			get
			{
				return this._ID_PD;
			}
			set
			{
				if ((this._ID_PD != value))
				{
					if (this._PHIEUDAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PDChanging(value);
					this.SendPropertyChanging();
					this._ID_PD = value;
					this.SendPropertyChanged("ID_PD");
					this.OnID_PDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIANHAP", DbType="Float")]
		public System.Nullable<double> DONGIANHAP
		{
			get
			{
				return this._DONGIANHAP;
			}
			set
			{
				if ((this._DONGIANHAP != value))
				{
					this.OnDONGIANHAPChanging(value);
					this.SendPropertyChanging();
					this._DONGIANHAP = value;
					this.SendPropertyChanged("DONGIANHAP");
					this.OnDONGIANHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIABAN", DbType="Float")]
		public System.Nullable<double> DONGIABAN
		{
			get
			{
				return this._DONGIABAN;
			}
			set
			{
				if ((this._DONGIABAN != value))
				{
					this.OnDONGIABANChanging(value);
					this.SendPropertyChanging();
					this._DONGIABAN = value;
					this.SendPropertyChanged("DONGIABAN");
					this.OnDONGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HANSD", DbType="Date")]
		public System.Nullable<System.DateTime> HANSD
		{
			get
			{
				return this._HANSD;
			}
			set
			{
				if ((this._HANSD != value))
				{
					this.OnHANSDChanging(value);
					this.SendPropertyChanging();
					this._HANSD = value;
					this.SendPropertyChanged("HANSD");
					this.OnHANSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Float")]
		public System.Nullable<double> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDAT_CHITIETPHIEUNHAP", Storage="_PHIEUDAT", ThisKey="ID_PD", OtherKey="ID_PD", IsForeignKey=true)]
		public PHIEUDAT PHIEUDAT
		{
			get
			{
				return this._PHIEUDAT.Entity;
			}
			set
			{
				PHIEUDAT previousValue = this._PHIEUDAT.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUDAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUDAT.Entity = null;
						previousValue.CHITIETPHIEUNHAPs.Remove(this);
					}
					this._PHIEUDAT.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUNHAPs.Add(this);
						this._ID_PD = value.ID_PD;
					}
					else
					{
						this._ID_PD = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHIEUDAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPHIEUNHAP", Storage="_PHIEUNHAP", ThisKey="ID_PN", OtherKey="ID_PN", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CHITIETPHIEUNHAPs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUNHAPs.Add(this);
						this._ID_PN = value.ID_PN;
					}
					else
					{
						this._ID_PN = default(int);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPHIEUXUAT")]
	public partial class CHITIETPHIEUXUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PX;
		
		private int _ID_SP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _DONGIA;
		
		private System.Nullable<double> _THANHTIEN;
		
		private EntityRef<PHIEUXUAT> _PHIEUXUAT;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PXChanging(int value);
    partial void OnID_PXChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    partial void OnTHANHTIENChanging(System.Nullable<double> value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public CHITIETPHIEUXUAT()
		{
			this._PHIEUXUAT = default(EntityRef<PHIEUXUAT>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PX", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PX
		{
			get
			{
				return this._ID_PX;
			}
			set
			{
				if ((this._ID_PX != value))
				{
					if (this._PHIEUXUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PXChanging(value);
					this.SendPropertyChanging();
					this._ID_PX = value;
					this.SendPropertyChanged("ID_PX");
					this.OnID_PXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Float")]
		public System.Nullable<double> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUXUAT_CHITIETPHIEUXUAT", Storage="_PHIEUXUAT", ThisKey="ID_PX", OtherKey="ID_PX", IsForeignKey=true)]
		public PHIEUXUAT PHIEUXUAT
		{
			get
			{
				return this._PHIEUXUAT.Entity;
			}
			set
			{
				PHIEUXUAT previousValue = this._PHIEUXUAT.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUXUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUXUAT.Entity = null;
						previousValue.CHITIETPHIEUXUATs.Remove(this);
					}
					this._PHIEUXUAT.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUXUATs.Add(this);
						this._ID_PX = value.ID_PX;
					}
					else
					{
						this._ID_PX = default(int);
					}
					this.SendPropertyChanged("PHIEUXUAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPHIEUXUAT", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETPHIEUXUATs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUXUATs.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETYCXUATHANG")]
	public partial class CHITIETYCXUATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_YCXH;
		
		private int _ID_SP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _DONGIA;
		
		private System.Nullable<double> _THANHTIEN;
		
		private EntityRef<YEUCAUXUATHANG> _YEUCAUXUATHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_YCXHChanging(int value);
    partial void OnID_YCXHChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    partial void OnTHANHTIENChanging(System.Nullable<double> value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public CHITIETYCXUATHANG()
		{
			this._YEUCAUXUATHANG = default(EntityRef<YEUCAUXUATHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_YCXH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_YCXH
		{
			get
			{
				return this._ID_YCXH;
			}
			set
			{
				if ((this._ID_YCXH != value))
				{
					if (this._YEUCAUXUATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_YCXHChanging(value);
					this.SendPropertyChanging();
					this._ID_YCXH = value;
					this.SendPropertyChanged("ID_YCXH");
					this.OnID_YCXHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Float")]
		public System.Nullable<double> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YEUCAUXUATHANG_CHITIETYCXUATHANG", Storage="_YEUCAUXUATHANG", ThisKey="ID_YCXH", OtherKey="ID_YCXH", IsForeignKey=true)]
		public YEUCAUXUATHANG YEUCAUXUATHANG
		{
			get
			{
				return this._YEUCAUXUATHANG.Entity;
			}
			set
			{
				YEUCAUXUATHANG previousValue = this._YEUCAUXUATHANG.Entity;
				if (((previousValue != value) 
							|| (this._YEUCAUXUATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._YEUCAUXUATHANG.Entity = null;
						previousValue.CHITIETYCXUATHANGs.Remove(this);
					}
					this._YEUCAUXUATHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETYCXUATHANGs.Add(this);
						this._ID_YCXH = value.ID_YCXH;
					}
					else
					{
						this._ID_YCXH = default(int);
					}
					this.SendPropertyChanged("YEUCAUXUATHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETYCXUATHANG", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETYCXUATHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETYCXUATHANGs.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITTIETCHUYENHANG")]
	public partial class CHITTIETCHUYENHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PC;
		
		private int _ID_SP;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<YEUCAUCHUYENHANG> _YEUCAUCHUYENHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PCChanging(int value);
    partial void OnID_PCChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITTIETCHUYENHANG()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._YEUCAUCHUYENHANG = default(EntityRef<YEUCAUCHUYENHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PC
		{
			get
			{
				return this._ID_PC;
			}
			set
			{
				if ((this._ID_PC != value))
				{
					if (this._YEUCAUCHUYENHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PCChanging(value);
					this.SendPropertyChanging();
					this._ID_PC = value;
					this.SendPropertyChanged("ID_PC");
					this.OnID_PCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITTIETCHUYENHANG", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITTIETCHUYENHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITTIETCHUYENHANGs.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YEUCAUCHUYENHANG_CHITTIETCHUYENHANG", Storage="_YEUCAUCHUYENHANG", ThisKey="ID_PC", OtherKey="ID_PC", IsForeignKey=true)]
		public YEUCAUCHUYENHANG YEUCAUCHUYENHANG
		{
			get
			{
				return this._YEUCAUCHUYENHANG.Entity;
			}
			set
			{
				YEUCAUCHUYENHANG previousValue = this._YEUCAUCHUYENHANG.Entity;
				if (((previousValue != value) 
							|| (this._YEUCAUCHUYENHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._YEUCAUCHUYENHANG.Entity = null;
						previousValue.CHITTIETCHUYENHANGs.Remove(this);
					}
					this._YEUCAUCHUYENHANG.Entity = value;
					if ((value != null))
					{
						value.CHITTIETCHUYENHANGs.Add(this);
						this._ID_PC = value.ID_PC;
					}
					else
					{
						this._ID_PC = default(int);
					}
					this.SendPropertyChanged("YEUCAUCHUYENHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUCSANPHAM")]
	public partial class DANHMUCSANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NCC;
		
		private int _ID_SP;
		
		private int _GIABAN;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NCCChanging(int value);
    partial void OnID_NCCChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnGIABANChanging(int value);
    partial void OnGIABANChanged();
    #endregion
		
		public DANHMUCSANPHAM()
		{
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NCC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_NCC
		{
			get
			{
				return this._ID_NCC;
			}
			set
			{
				if ((this._ID_NCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NCCChanging(value);
					this.SendPropertyChanging();
					this._ID_NCC = value;
					this.SendPropertyChanged("ID_NCC");
					this.OnID_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Int NOT NULL")]
		public int GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_DANHMUCSANPHAM", Storage="_NHACUNGCAP", ThisKey="ID_NCC", OtherKey="ID_NCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.DANHMUCSANPHAMs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.DANHMUCSANPHAMs.Add(this);
						this._ID_NCC = value.ID_NCC;
					}
					else
					{
						this._ID_NCC = default(int);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DANHMUCSANPHAM", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.DANHMUCSANPHAMs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.DANHMUCSANPHAMs.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISANPHAM")]
	public partial class LOAISANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_LSP;
		
		private string _TENLOAISANPHAM;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LSPChanging(int value);
    partial void OnID_LSPChanged();
    partial void OnTENLOAISANPHAMChanging(string value);
    partial void OnTENLOAISANPHAMChanged();
    #endregion
		
		public LOAISANPHAM()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_LSP
		{
			get
			{
				return this._ID_LSP;
			}
			set
			{
				if ((this._ID_LSP != value))
				{
					this.OnID_LSPChanging(value);
					this.SendPropertyChanging();
					this._ID_LSP = value;
					this.SendPropertyChanged("ID_LSP");
					this.OnID_LSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAISANPHAM", DbType="NVarChar(100)")]
		public string TENLOAISANPHAM
		{
			get
			{
				return this._TENLOAISANPHAM;
			}
			set
			{
				if ((this._TENLOAISANPHAM != value))
				{
					this.OnTENLOAISANPHAMChanging(value);
					this.SendPropertyChanging();
					this._TENLOAISANPHAM = value;
					this.SendPropertyChanged("TENLOAISANPHAM");
					this.OnTENLOAISANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_LSP", OtherKey="ID_LSP")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MANHINH")]
	public partial class MANHINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_MANHINH;
		
		private string _TENMANHINH;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MANHINHChanging(int value);
    partial void OnID_MANHINHChanged();
    partial void OnTENMANHINHChanging(string value);
    partial void OnTENMANHINHChanged();
    #endregion
		
		public MANHINH()
		{
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MANHINH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_MANHINH
		{
			get
			{
				return this._ID_MANHINH;
			}
			set
			{
				if ((this._ID_MANHINH != value))
				{
					this.OnID_MANHINHChanging(value);
					this.SendPropertyChanging();
					this._ID_MANHINH = value;
					this.SendPropertyChanged("ID_MANHINH");
					this.OnID_MANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMANHINH", DbType="VarChar(50)")]
		public string TENMANHINH
		{
			get
			{
				return this._TENMANHINH;
			}
			set
			{
				if ((this._TENMANHINH != value))
				{
					this.OnTENMANHINHChanging(value);
					this.SendPropertyChanging();
					this._TENMANHINH = value;
					this.SendPropertyChanged("TENMANHINH");
					this.OnTENMANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="ID_MANHINH", OtherKey="ID_MANHINH")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIDUNG")]
	public partial class NGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_KHO;
		
		private string _ID_DN;
		
		private string _MATKHAU;
		
		private string _TEN;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private string _GIOITINH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private System.Nullable<bool> _TINHTRANG;
		
		private string _HINH;
		
		private EntitySet<YEUCAUXUATHANG> _YEUCAUXUATHANGs;
		
		private EntitySet<NGUOIDUNGNHOMNGUOIDUNG> _NGUOIDUNGNHOMNGUOIDUNGs;
		
		private EntitySet<PHIEUDAT> _PHIEUDATs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<PHIEUXUAT> _PHIEUXUATs;
		
		private EntityRef<THONGTINKHO> _THONGTINKHO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KHOChanging(int value);
    partial void OnID_KHOChanged();
    partial void OnID_DNChanging(string value);
    partial void OnID_DNChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnTINHTRANGChanging(System.Nullable<bool> value);
    partial void OnTINHTRANGChanged();
    partial void OnHINHChanging(string value);
    partial void OnHINHChanged();
    #endregion
		
		public NGUOIDUNG()
		{
			this._YEUCAUXUATHANGs = new EntitySet<YEUCAUXUATHANG>(new Action<YEUCAUXUATHANG>(this.attach_YEUCAUXUATHANGs), new Action<YEUCAUXUATHANG>(this.detach_YEUCAUXUATHANGs));
			this._NGUOIDUNGNHOMNGUOIDUNGs = new EntitySet<NGUOIDUNGNHOMNGUOIDUNG>(new Action<NGUOIDUNGNHOMNGUOIDUNG>(this.attach_NGUOIDUNGNHOMNGUOIDUNGs), new Action<NGUOIDUNGNHOMNGUOIDUNG>(this.detach_NGUOIDUNGNHOMNGUOIDUNGs));
			this._PHIEUDATs = new EntitySet<PHIEUDAT>(new Action<PHIEUDAT>(this.attach_PHIEUDATs), new Action<PHIEUDAT>(this.detach_PHIEUDATs));
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._PHIEUXUATs = new EntitySet<PHIEUXUAT>(new Action<PHIEUXUAT>(this.attach_PHIEUXUATs), new Action<PHIEUXUAT>(this.detach_PHIEUXUATs));
			this._THONGTINKHO = default(EntityRef<THONGTINKHO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHO", DbType="Int NOT NULL")]
		public int ID_KHO
		{
			get
			{
				return this._ID_KHO;
			}
			set
			{
				if ((this._ID_KHO != value))
				{
					if (this._THONGTINKHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHOChanging(value);
					this.SendPropertyChanging();
					this._ID_KHO = value;
					this.SendPropertyChanged("ID_KHO");
					this.OnID_KHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_DN
		{
			get
			{
				return this._ID_DN;
			}
			set
			{
				if ((this._ID_DN != value))
				{
					this.OnID_DNChanging(value);
					this.SendPropertyChanging();
					this._ID_DN = value;
					this.SendPropertyChanged("ID_DN");
					this.OnID_DNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(10)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Bit")]
		public System.Nullable<bool> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINH", DbType="NVarChar(50)")]
		public string HINH
		{
			get
			{
				return this._HINH;
			}
			set
			{
				if ((this._HINH != value))
				{
					this.OnHINHChanging(value);
					this.SendPropertyChanging();
					this._HINH = value;
					this.SendPropertyChanged("HINH");
					this.OnHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_YEUCAUXUATHANG", Storage="_YEUCAUXUATHANGs", ThisKey="ID_DN", OtherKey="ID_DN")]
		public EntitySet<YEUCAUXUATHANG> YEUCAUXUATHANGs
		{
			get
			{
				return this._YEUCAUXUATHANGs;
			}
			set
			{
				this._YEUCAUXUATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_NGUOIDUNGNHOMNGUOIDUNG", Storage="_NGUOIDUNGNHOMNGUOIDUNGs", ThisKey="ID_DN", OtherKey="ID_DN")]
		public EntitySet<NGUOIDUNGNHOMNGUOIDUNG> NGUOIDUNGNHOMNGUOIDUNGs
		{
			get
			{
				return this._NGUOIDUNGNHOMNGUOIDUNGs;
			}
			set
			{
				this._NGUOIDUNGNHOMNGUOIDUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_PHIEUDAT", Storage="_PHIEUDATs", ThisKey="ID_DN", OtherKey="ID_DN")]
		public EntitySet<PHIEUDAT> PHIEUDATs
		{
			get
			{
				return this._PHIEUDATs;
			}
			set
			{
				this._PHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="ID_DN", OtherKey="ID_DN")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_PHIEUXUAT", Storage="_PHIEUXUATs", ThisKey="ID_DN", OtherKey="ID_DN")]
		public EntitySet<PHIEUXUAT> PHIEUXUATs
		{
			get
			{
				return this._PHIEUXUATs;
			}
			set
			{
				this._PHIEUXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THONGTINKHO_NGUOIDUNG", Storage="_THONGTINKHO", ThisKey="ID_KHO", OtherKey="ID_KHO", IsForeignKey=true)]
		public THONGTINKHO THONGTINKHO
		{
			get
			{
				return this._THONGTINKHO.Entity;
			}
			set
			{
				THONGTINKHO previousValue = this._THONGTINKHO.Entity;
				if (((previousValue != value) 
							|| (this._THONGTINKHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THONGTINKHO.Entity = null;
						previousValue.NGUOIDUNGs.Remove(this);
					}
					this._THONGTINKHO.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNGs.Add(this);
						this._ID_KHO = value.ID_KHO;
					}
					else
					{
						this._ID_KHO = default(int);
					}
					this.SendPropertyChanged("THONGTINKHO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_YEUCAUXUATHANGs(YEUCAUXUATHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_YEUCAUXUATHANGs(YEUCAUXUATHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
		
		private void attach_NGUOIDUNGNHOMNGUOIDUNGs(NGUOIDUNGNHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_NGUOIDUNGNHOMNGUOIDUNGs(NGUOIDUNGNHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
		
		private void attach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
		
		private void attach_PHIEUXUATs(PHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_PHIEUXUATs(PHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIDUNGNHOMNGUOIDUNG")]
	public partial class NGUOIDUNGNHOMNGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NHOM;
		
		private string _ID_DN;
		
		private string _GHICHU;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
		private EntityRef<NHOMNGUOIDUNG> _NHOMNGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NHOMChanging(string value);
    partial void OnID_NHOMChanged();
    partial void OnID_DNChanging(string value);
    partial void OnID_DNChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    #endregion
		
		public NGUOIDUNGNHOMNGUOIDUNG()
		{
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			this._NHOMNGUOIDUNG = default(EntityRef<NHOMNGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHOM", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NHOM
		{
			get
			{
				return this._ID_NHOM;
			}
			set
			{
				if ((this._ID_NHOM != value))
				{
					if (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NHOMChanging(value);
					this.SendPropertyChanging();
					this._ID_NHOM = value;
					this.SendPropertyChanged("ID_NHOM");
					this.OnID_NHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_DN
		{
			get
			{
				return this._ID_DN;
			}
			set
			{
				if ((this._ID_DN != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DNChanging(value);
					this.SendPropertyChanging();
					this._ID_DN = value;
					this.SendPropertyChanged("ID_DN");
					this.OnID_DNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(50)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_NGUOIDUNGNHOMNGUOIDUNG", Storage="_NGUOIDUNG", ThisKey="ID_DN", OtherKey="ID_DN", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.NGUOIDUNGNHOMNGUOIDUNGs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNGNHOMNGUOIDUNGs.Add(this);
						this._ID_DN = value.ID_DN;
					}
					else
					{
						this._ID_DN = default(string);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_NGUOIDUNGNHOMNGUOIDUNG", Storage="_NHOMNGUOIDUNG", ThisKey="ID_NHOM", OtherKey="ID_NHOM", IsForeignKey=true)]
		public NHOMNGUOIDUNG NHOMNGUOIDUNG
		{
			get
			{
				return this._NHOMNGUOIDUNG.Entity;
			}
			set
			{
				NHOMNGUOIDUNG previousValue = this._NHOMNGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMNGUOIDUNG.Entity = null;
						previousValue.NGUOIDUNGNHOMNGUOIDUNGs.Remove(this);
					}
					this._NHOMNGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNGNHOMNGUOIDUNGs.Add(this);
						this._ID_NHOM = value.ID_NHOM;
					}
					else
					{
						this._ID_NHOM = default(string);
					}
					this.SendPropertyChanged("NHOMNGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NCC;
		
		private string _TENNCC;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<DANHMUCSANPHAM> _DANHMUCSANPHAMs;
		
		private EntitySet<PHIEUDAT> _PHIEUDATs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NCCChanging(int value);
    partial void OnID_NCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._DANHMUCSANPHAMs = new EntitySet<DANHMUCSANPHAM>(new Action<DANHMUCSANPHAM>(this.attach_DANHMUCSANPHAMs), new Action<DANHMUCSANPHAM>(this.detach_DANHMUCSANPHAMs));
			this._PHIEUDATs = new EntitySet<PHIEUDAT>(new Action<PHIEUDAT>(this.attach_PHIEUDATs), new Action<PHIEUDAT>(this.detach_PHIEUDATs));
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NCC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NCC
		{
			get
			{
				return this._ID_NCC;
			}
			set
			{
				if ((this._ID_NCC != value))
				{
					this.OnID_NCCChanging(value);
					this.SendPropertyChanging();
					this._ID_NCC = value;
					this.SendPropertyChanged("ID_NCC");
					this.OnID_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(50)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_DANHMUCSANPHAM", Storage="_DANHMUCSANPHAMs", ThisKey="ID_NCC", OtherKey="ID_NCC")]
		public EntitySet<DANHMUCSANPHAM> DANHMUCSANPHAMs
		{
			get
			{
				return this._DANHMUCSANPHAMs;
			}
			set
			{
				this._DANHMUCSANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUDAT", Storage="_PHIEUDATs", ThisKey="ID_NCC", OtherKey="ID_NCC")]
		public EntitySet<PHIEUDAT> PHIEUDATs
		{
			get
			{
				return this._PHIEUDATs;
			}
			set
			{
				this._PHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="ID_NCC", OtherKey="ID_NCC")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DANHMUCSANPHAMs(DANHMUCSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_DANHMUCSANPHAMs(DANHMUCSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
		
		private void attach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMNGUOIDUNG")]
	public partial class NHOMNGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NHOM;
		
		private string _TENNHOM;
		
		private EntitySet<NGUOIDUNGNHOMNGUOIDUNG> _NGUOIDUNGNHOMNGUOIDUNGs;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NHOMChanging(string value);
    partial void OnID_NHOMChanged();
    partial void OnTENNHOMChanging(string value);
    partial void OnTENNHOMChanged();
    #endregion
		
		public NHOMNGUOIDUNG()
		{
			this._NGUOIDUNGNHOMNGUOIDUNGs = new EntitySet<NGUOIDUNGNHOMNGUOIDUNG>(new Action<NGUOIDUNGNHOMNGUOIDUNG>(this.attach_NGUOIDUNGNHOMNGUOIDUNGs), new Action<NGUOIDUNGNHOMNGUOIDUNG>(this.detach_NGUOIDUNGNHOMNGUOIDUNGs));
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHOM", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NHOM
		{
			get
			{
				return this._ID_NHOM;
			}
			set
			{
				if ((this._ID_NHOM != value))
				{
					this.OnID_NHOMChanging(value);
					this.SendPropertyChanging();
					this._ID_NHOM = value;
					this.SendPropertyChanged("ID_NHOM");
					this.OnID_NHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNHOM", DbType="NVarChar(50)")]
		public string TENNHOM
		{
			get
			{
				return this._TENNHOM;
			}
			set
			{
				if ((this._TENNHOM != value))
				{
					this.OnTENNHOMChanging(value);
					this.SendPropertyChanging();
					this._TENNHOM = value;
					this.SendPropertyChanged("TENNHOM");
					this.OnTENNHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_NGUOIDUNGNHOMNGUOIDUNG", Storage="_NGUOIDUNGNHOMNGUOIDUNGs", ThisKey="ID_NHOM", OtherKey="ID_NHOM")]
		public EntitySet<NGUOIDUNGNHOMNGUOIDUNG> NGUOIDUNGNHOMNGUOIDUNGs
		{
			get
			{
				return this._NGUOIDUNGNHOMNGUOIDUNGs;
			}
			set
			{
				this._NGUOIDUNGNHOMNGUOIDUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="ID_NHOM", OtherKey="ID_NHOM")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NGUOIDUNGNHOMNGUOIDUNGs(NGUOIDUNGNHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = this;
		}
		
		private void detach_NGUOIDUNGNHOMNGUOIDUNGs(NGUOIDUNGNHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = null;
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NHOM;
		
		private int _ID_MANHINH;
		
		private string _GHICHU;
		
		private System.Nullable<bool> _COQUYEN;
		
		private EntityRef<MANHINH> _MANHINH;
		
		private EntityRef<NHOMNGUOIDUNG> _NHOMNGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NHOMChanging(string value);
    partial void OnID_NHOMChanged();
    partial void OnID_MANHINHChanging(int value);
    partial void OnID_MANHINHChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    partial void OnCOQUYENChanging(System.Nullable<bool> value);
    partial void OnCOQUYENChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._MANHINH = default(EntityRef<MANHINH>);
			this._NHOMNGUOIDUNG = default(EntityRef<NHOMNGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHOM", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NHOM
		{
			get
			{
				return this._ID_NHOM;
			}
			set
			{
				if ((this._ID_NHOM != value))
				{
					if (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NHOMChanging(value);
					this.SendPropertyChanging();
					this._ID_NHOM = value;
					this.SendPropertyChanged("ID_NHOM");
					this.OnID_NHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MANHINH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_MANHINH
		{
			get
			{
				return this._ID_MANHINH;
			}
			set
			{
				if ((this._ID_MANHINH != value))
				{
					if (this._MANHINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MANHINHChanging(value);
					this.SendPropertyChanging();
					this._ID_MANHINH = value;
					this.SendPropertyChanged("ID_MANHINH");
					this.OnID_MANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="VarChar(20)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COQUYEN", DbType="Bit")]
		public System.Nullable<bool> COQUYEN
		{
			get
			{
				return this._COQUYEN;
			}
			set
			{
				if ((this._COQUYEN != value))
				{
					this.OnCOQUYENChanging(value);
					this.SendPropertyChanging();
					this._COQUYEN = value;
					this.SendPropertyChanged("COQUYEN");
					this.OnCOQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_PHANQUYEN", Storage="_MANHINH", ThisKey="ID_MANHINH", OtherKey="ID_MANHINH", IsForeignKey=true)]
		public MANHINH MANHINH
		{
			get
			{
				return this._MANHINH.Entity;
			}
			set
			{
				MANHINH previousValue = this._MANHINH.Entity;
				if (((previousValue != value) 
							|| (this._MANHINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANHINH.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._MANHINH.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._ID_MANHINH = value.ID_MANHINH;
					}
					else
					{
						this._ID_MANHINH = default(int);
					}
					this.SendPropertyChanged("MANHINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_PHANQUYEN", Storage="_NHOMNGUOIDUNG", ThisKey="ID_NHOM", OtherKey="ID_NHOM", IsForeignKey=true)]
		public NHOMNGUOIDUNG NHOMNGUOIDUNG
		{
			get
			{
				return this._NHOMNGUOIDUNG.Entity;
			}
			set
			{
				NHOMNGUOIDUNG previousValue = this._NHOMNGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMNGUOIDUNG.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._NHOMNGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._ID_NHOM = value.ID_NHOM;
					}
					else
					{
						this._ID_NHOM = default(string);
					}
					this.SendPropertyChanged("NHOMNGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUDAT")]
	public partial class PHIEUDAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PD;
		
		private System.Nullable<int> _ID_NCC;
		
		private string _ID_DN;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<double> _TONGTIEN;
		
		private System.Nullable<bool> _TINHTRANG;
		
		private EntitySet<CHITIETPHIEUDAT> _CHITIETPHIEUDATs;
		
		private EntitySet<CHITIETPHIEUNHAP> _CHITIETPHIEUNHAPs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PDChanging(int value);
    partial void OnID_PDChanged();
    partial void OnID_NCCChanging(System.Nullable<int> value);
    partial void OnID_NCCChanged();
    partial void OnID_DNChanging(string value);
    partial void OnID_DNChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    partial void OnTINHTRANGChanging(System.Nullable<bool> value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public PHIEUDAT()
		{
			this._CHITIETPHIEUDATs = new EntitySet<CHITIETPHIEUDAT>(new Action<CHITIETPHIEUDAT>(this.attach_CHITIETPHIEUDATs), new Action<CHITIETPHIEUDAT>(this.detach_CHITIETPHIEUDATs));
			this._CHITIETPHIEUNHAPs = new EntitySet<CHITIETPHIEUNHAP>(new Action<CHITIETPHIEUNHAP>(this.attach_CHITIETPHIEUNHAPs), new Action<CHITIETPHIEUNHAP>(this.detach_CHITIETPHIEUNHAPs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PD
		{
			get
			{
				return this._ID_PD;
			}
			set
			{
				if ((this._ID_PD != value))
				{
					this.OnID_PDChanging(value);
					this.SendPropertyChanging();
					this._ID_PD = value;
					this.SendPropertyChanged("ID_PD");
					this.OnID_PDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NCC", DbType="Int")]
		public System.Nullable<int> ID_NCC
		{
			get
			{
				return this._ID_NCC;
			}
			set
			{
				if ((this._ID_NCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NCCChanging(value);
					this.SendPropertyChanging();
					this._ID_NCC = value;
					this.SendPropertyChanged("ID_NCC");
					this.OnID_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DN", DbType="VarChar(10)")]
		public string ID_DN
		{
			get
			{
				return this._ID_DN;
			}
			set
			{
				if ((this._ID_DN != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DNChanging(value);
					this.SendPropertyChanging();
					this._ID_DN = value;
					this.SendPropertyChanged("ID_DN");
					this.OnID_DNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Bit")]
		public System.Nullable<bool> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDAT_CHITIETPHIEUDAT", Storage="_CHITIETPHIEUDATs", ThisKey="ID_PD", OtherKey="ID_PD")]
		public EntitySet<CHITIETPHIEUDAT> CHITIETPHIEUDATs
		{
			get
			{
				return this._CHITIETPHIEUDATs;
			}
			set
			{
				this._CHITIETPHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDAT_CHITIETPHIEUNHAP", Storage="_CHITIETPHIEUNHAPs", ThisKey="ID_PD", OtherKey="ID_PD")]
		public EntitySet<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this._CHITIETPHIEUNHAPs;
			}
			set
			{
				this._CHITIETPHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUDAT", Storage="_NHACUNGCAP", ThisKey="ID_NCC", OtherKey="ID_NCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.PHIEUDATs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.PHIEUDATs.Add(this);
						this._ID_NCC = value.ID_NCC;
					}
					else
					{
						this._ID_NCC = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_PHIEUDAT", Storage="_NGUOIDUNG", ThisKey="ID_DN", OtherKey="ID_DN", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.PHIEUDATs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.PHIEUDATs.Add(this);
						this._ID_DN = value.ID_DN;
					}
					else
					{
						this._ID_DN = default(string);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUDATs(CHITIETPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDAT = this;
		}
		
		private void detach_CHITIETPHIEUDATs(CHITIETPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDAT = null;
		}
		
		private void attach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDAT = this;
		}
		
		private void detach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDAT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PN;
		
		private System.Nullable<int> _ID_NCC;
		
		private string _ID_DN;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<double> _TONGTIEN;
		
		private EntitySet<CHITIETPHIEUNHAP> _CHITIETPHIEUNHAPs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PNChanging(int value);
    partial void OnID_PNChanged();
    partial void OnID_NCCChanging(System.Nullable<int> value);
    partial void OnID_NCCChanged();
    partial void OnID_DNChanging(string value);
    partial void OnID_DNChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CHITIETPHIEUNHAPs = new EntitySet<CHITIETPHIEUNHAP>(new Action<CHITIETPHIEUNHAP>(this.attach_CHITIETPHIEUNHAPs), new Action<CHITIETPHIEUNHAP>(this.detach_CHITIETPHIEUNHAPs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PN
		{
			get
			{
				return this._ID_PN;
			}
			set
			{
				if ((this._ID_PN != value))
				{
					this.OnID_PNChanging(value);
					this.SendPropertyChanging();
					this._ID_PN = value;
					this.SendPropertyChanged("ID_PN");
					this.OnID_PNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NCC", DbType="Int")]
		public System.Nullable<int> ID_NCC
		{
			get
			{
				return this._ID_NCC;
			}
			set
			{
				if ((this._ID_NCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NCCChanging(value);
					this.SendPropertyChanging();
					this._ID_NCC = value;
					this.SendPropertyChanged("ID_NCC");
					this.OnID_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DN", DbType="VarChar(10)")]
		public string ID_DN
		{
			get
			{
				return this._ID_DN;
			}
			set
			{
				if ((this._ID_DN != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DNChanging(value);
					this.SendPropertyChanging();
					this._ID_DN = value;
					this.SendPropertyChanged("ID_DN");
					this.OnID_DNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPHIEUNHAP", Storage="_CHITIETPHIEUNHAPs", ThisKey="ID_PN", OtherKey="ID_PN")]
		public EntitySet<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this._CHITIETPHIEUNHAPs;
			}
			set
			{
				this._CHITIETPHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_NHACUNGCAP", ThisKey="ID_NCC", OtherKey="ID_NCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._ID_NCC = value.ID_NCC;
					}
					else
					{
						this._ID_NCC = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_PHIEUNHAP", Storage="_NGUOIDUNG", ThisKey="ID_DN", OtherKey="ID_DN", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._ID_DN = value.ID_DN;
					}
					else
					{
						this._ID_DN = default(string);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUXUAT")]
	public partial class PHIEUXUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PX;
		
		private System.Nullable<int> _ID_YCXH;
		
		private string _ID_DN;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<double> _TONGTIEN;
		
		private EntitySet<CHITIETPHIEUXUAT> _CHITIETPHIEUXUATs;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
		private EntityRef<YEUCAUXUATHANG> _YEUCAUXUATHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PXChanging(int value);
    partial void OnID_PXChanged();
    partial void OnID_YCXHChanging(System.Nullable<int> value);
    partial void OnID_YCXHChanged();
    partial void OnID_DNChanging(string value);
    partial void OnID_DNChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public PHIEUXUAT()
		{
			this._CHITIETPHIEUXUATs = new EntitySet<CHITIETPHIEUXUAT>(new Action<CHITIETPHIEUXUAT>(this.attach_CHITIETPHIEUXUATs), new Action<CHITIETPHIEUXUAT>(this.detach_CHITIETPHIEUXUATs));
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			this._YEUCAUXUATHANG = default(EntityRef<YEUCAUXUATHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PX
		{
			get
			{
				return this._ID_PX;
			}
			set
			{
				if ((this._ID_PX != value))
				{
					this.OnID_PXChanging(value);
					this.SendPropertyChanging();
					this._ID_PX = value;
					this.SendPropertyChanged("ID_PX");
					this.OnID_PXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_YCXH", DbType="Int")]
		public System.Nullable<int> ID_YCXH
		{
			get
			{
				return this._ID_YCXH;
			}
			set
			{
				if ((this._ID_YCXH != value))
				{
					if (this._YEUCAUXUATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_YCXHChanging(value);
					this.SendPropertyChanging();
					this._ID_YCXH = value;
					this.SendPropertyChanged("ID_YCXH");
					this.OnID_YCXHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DN", DbType="VarChar(10)")]
		public string ID_DN
		{
			get
			{
				return this._ID_DN;
			}
			set
			{
				if ((this._ID_DN != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DNChanging(value);
					this.SendPropertyChanging();
					this._ID_DN = value;
					this.SendPropertyChanged("ID_DN");
					this.OnID_DNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUXUAT_CHITIETPHIEUXUAT", Storage="_CHITIETPHIEUXUATs", ThisKey="ID_PX", OtherKey="ID_PX")]
		public EntitySet<CHITIETPHIEUXUAT> CHITIETPHIEUXUATs
		{
			get
			{
				return this._CHITIETPHIEUXUATs;
			}
			set
			{
				this._CHITIETPHIEUXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_PHIEUXUAT", Storage="_NGUOIDUNG", ThisKey="ID_DN", OtherKey="ID_DN", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.PHIEUXUATs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.PHIEUXUATs.Add(this);
						this._ID_DN = value.ID_DN;
					}
					else
					{
						this._ID_DN = default(string);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YEUCAUXUATHANG_PHIEUXUAT", Storage="_YEUCAUXUATHANG", ThisKey="ID_YCXH", OtherKey="ID_YCXH", IsForeignKey=true)]
		public YEUCAUXUATHANG YEUCAUXUATHANG
		{
			get
			{
				return this._YEUCAUXUATHANG.Entity;
			}
			set
			{
				YEUCAUXUATHANG previousValue = this._YEUCAUXUATHANG.Entity;
				if (((previousValue != value) 
							|| (this._YEUCAUXUATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._YEUCAUXUATHANG.Entity = null;
						previousValue.PHIEUXUATs.Remove(this);
					}
					this._YEUCAUXUATHANG.Entity = value;
					if ((value != null))
					{
						value.PHIEUXUATs.Add(this);
						this._ID_YCXH = value.ID_YCXH;
					}
					else
					{
						this._ID_YCXH = default(Nullable<int>);
					}
					this.SendPropertyChanged("YEUCAUXUATHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUXUATs(CHITIETPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUXUAT = this;
		}
		
		private void detach_CHITIETPHIEUXUATs(CHITIETPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUXUAT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SP;
		
		private string _TENSP;
		
		private string _DVT;
		
		private System.Nullable<int> _ID_LSP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _DONGIA;
		
		private string _HINHANH;
		
		private System.Nullable<System.DateTime> _NGAYNHAP;
		
		private EntitySet<CHITIETPHIEUDAT> _CHITIETPHIEUDATs;
		
		private EntitySet<CHITIETPHIEUXUAT> _CHITIETPHIEUXUATs;
		
		private EntitySet<CHITIETYCXUATHANG> _CHITIETYCXUATHANGs;
		
		private EntitySet<CHITTIETCHUYENHANG> _CHITTIETCHUYENHANGs;
		
		private EntitySet<DANHMUCSANPHAM> _DANHMUCSANPHAMs;
		
		private EntityRef<LOAISANPHAM> _LOAISANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnID_LSPChanging(System.Nullable<int> value);
    partial void OnID_LSPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnNGAYNHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CHITIETPHIEUDATs = new EntitySet<CHITIETPHIEUDAT>(new Action<CHITIETPHIEUDAT>(this.attach_CHITIETPHIEUDATs), new Action<CHITIETPHIEUDAT>(this.detach_CHITIETPHIEUDATs));
			this._CHITIETPHIEUXUATs = new EntitySet<CHITIETPHIEUXUAT>(new Action<CHITIETPHIEUXUAT>(this.attach_CHITIETPHIEUXUATs), new Action<CHITIETPHIEUXUAT>(this.detach_CHITIETPHIEUXUATs));
			this._CHITIETYCXUATHANGs = new EntitySet<CHITIETYCXUATHANG>(new Action<CHITIETYCXUATHANG>(this.attach_CHITIETYCXUATHANGs), new Action<CHITIETYCXUATHANG>(this.detach_CHITIETYCXUATHANGs));
			this._CHITTIETCHUYENHANGs = new EntitySet<CHITTIETCHUYENHANG>(new Action<CHITTIETCHUYENHANG>(this.attach_CHITTIETCHUYENHANGs), new Action<CHITTIETCHUYENHANG>(this.detach_CHITTIETCHUYENHANGs));
			this._DANHMUCSANPHAMs = new EntitySet<DANHMUCSANPHAM>(new Action<DANHMUCSANPHAM>(this.attach_DANHMUCSANPHAMs), new Action<DANHMUCSANPHAM>(this.detach_DANHMUCSANPHAMs));
			this._LOAISANPHAM = default(EntityRef<LOAISANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(100)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(10)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LSP", DbType="Int")]
		public System.Nullable<int> ID_LSP
		{
			get
			{
				return this._ID_LSP;
			}
			set
			{
				if ((this._ID_LSP != value))
				{
					if (this._LOAISANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LSPChanging(value);
					this.SendPropertyChanging();
					this._ID_LSP = value;
					this.SendPropertyChanged("ID_LSP");
					this.OnID_LSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NVarChar(100)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYNHAP
		{
			get
			{
				return this._NGAYNHAP;
			}
			set
			{
				if ((this._NGAYNHAP != value))
				{
					this.OnNGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAP = value;
					this.SendPropertyChanged("NGAYNHAP");
					this.OnNGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPHIEUDAT", Storage="_CHITIETPHIEUDATs", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<CHITIETPHIEUDAT> CHITIETPHIEUDATs
		{
			get
			{
				return this._CHITIETPHIEUDATs;
			}
			set
			{
				this._CHITIETPHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPHIEUXUAT", Storage="_CHITIETPHIEUXUATs", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<CHITIETPHIEUXUAT> CHITIETPHIEUXUATs
		{
			get
			{
				return this._CHITIETPHIEUXUATs;
			}
			set
			{
				this._CHITIETPHIEUXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETYCXUATHANG", Storage="_CHITIETYCXUATHANGs", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<CHITIETYCXUATHANG> CHITIETYCXUATHANGs
		{
			get
			{
				return this._CHITIETYCXUATHANGs;
			}
			set
			{
				this._CHITIETYCXUATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITTIETCHUYENHANG", Storage="_CHITTIETCHUYENHANGs", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<CHITTIETCHUYENHANG> CHITTIETCHUYENHANGs
		{
			get
			{
				return this._CHITTIETCHUYENHANGs;
			}
			set
			{
				this._CHITTIETCHUYENHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DANHMUCSANPHAM", Storage="_DANHMUCSANPHAMs", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<DANHMUCSANPHAM> DANHMUCSANPHAMs
		{
			get
			{
				return this._DANHMUCSANPHAMs;
			}
			set
			{
				this._DANHMUCSANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_LOAISANPHAM", ThisKey="ID_LSP", OtherKey="ID_LSP", IsForeignKey=true)]
		public LOAISANPHAM LOAISANPHAM
		{
			get
			{
				return this._LOAISANPHAM.Entity;
			}
			set
			{
				LOAISANPHAM previousValue = this._LOAISANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAISANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISANPHAM.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISANPHAM.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_LSP = value.ID_LSP;
					}
					else
					{
						this._ID_LSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAISANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUDATs(CHITIETPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETPHIEUDATs(CHITIETPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETPHIEUXUATs(CHITIETPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETPHIEUXUATs(CHITIETPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETYCXUATHANGs(CHITIETYCXUATHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETYCXUATHANGs(CHITIETYCXUATHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITTIETCHUYENHANGs(CHITTIETCHUYENHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITTIETCHUYENHANGs(CHITTIETCHUYENHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_DANHMUCSANPHAMs(DANHMUCSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_DANHMUCSANPHAMs(DANHMUCSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGTINKHO")]
	public partial class THONGTINKHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_KHO;
		
		private string _DIACHI;
		
		private string _TINHTRANG;
		
		private System.Nullable<int> _SLNV;
		
		private EntitySet<NGUOIDUNG> _NGUOIDUNGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KHOChanging(int value);
    partial void OnID_KHOChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    partial void OnSLNVChanging(System.Nullable<int> value);
    partial void OnSLNVChanged();
    #endregion
		
		public THONGTINKHO()
		{
			this._NGUOIDUNGs = new EntitySet<NGUOIDUNG>(new Action<NGUOIDUNG>(this.attach_NGUOIDUNGs), new Action<NGUOIDUNG>(this.detach_NGUOIDUNGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_KHO
		{
			get
			{
				return this._ID_KHO;
			}
			set
			{
				if ((this._ID_KHO != value))
				{
					this.OnID_KHOChanging(value);
					this.SendPropertyChanging();
					this._ID_KHO = value;
					this.SendPropertyChanged("ID_KHO");
					this.OnID_KHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(200)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(30)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLNV", DbType="Int")]
		public System.Nullable<int> SLNV
		{
			get
			{
				return this._SLNV;
			}
			set
			{
				if ((this._SLNV != value))
				{
					this.OnSLNVChanging(value);
					this.SendPropertyChanging();
					this._SLNV = value;
					this.SendPropertyChanged("SLNV");
					this.OnSLNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THONGTINKHO_NGUOIDUNG", Storage="_NGUOIDUNGs", ThisKey="ID_KHO", OtherKey="ID_KHO")]
		public EntitySet<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this._NGUOIDUNGs;
			}
			set
			{
				this._NGUOIDUNGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.THONGTINKHO = this;
		}
		
		private void detach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.THONGTINKHO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YEUCAUCHUYENHANG")]
	public partial class YEUCAUCHUYENHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PC;
		
		private int _ID_KHO;
		
		private string _ID_DN;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private string _TINHTRANG;
		
		private EntitySet<CHITTIETCHUYENHANG> _CHITTIETCHUYENHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PCChanging(int value);
    partial void OnID_PCChanged();
    partial void OnID_KHOChanging(int value);
    partial void OnID_KHOChanged();
    partial void OnID_DNChanging(string value);
    partial void OnID_DNChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public YEUCAUCHUYENHANG()
		{
			this._CHITTIETCHUYENHANGs = new EntitySet<CHITTIETCHUYENHANG>(new Action<CHITTIETCHUYENHANG>(this.attach_CHITTIETCHUYENHANGs), new Action<CHITTIETCHUYENHANG>(this.detach_CHITTIETCHUYENHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PC
		{
			get
			{
				return this._ID_PC;
			}
			set
			{
				if ((this._ID_PC != value))
				{
					this.OnID_PCChanging(value);
					this.SendPropertyChanging();
					this._ID_PC = value;
					this.SendPropertyChanged("ID_PC");
					this.OnID_PCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHO", DbType="Int NOT NULL")]
		public int ID_KHO
		{
			get
			{
				return this._ID_KHO;
			}
			set
			{
				if ((this._ID_KHO != value))
				{
					this.OnID_KHOChanging(value);
					this.SendPropertyChanging();
					this._ID_KHO = value;
					this.SendPropertyChanged("ID_KHO");
					this.OnID_KHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DN", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ID_DN
		{
			get
			{
				return this._ID_DN;
			}
			set
			{
				if ((this._ID_DN != value))
				{
					this.OnID_DNChanging(value);
					this.SendPropertyChanging();
					this._ID_DN = value;
					this.SendPropertyChanged("ID_DN");
					this.OnID_DNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(50)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YEUCAUCHUYENHANG_CHITTIETCHUYENHANG", Storage="_CHITTIETCHUYENHANGs", ThisKey="ID_PC", OtherKey="ID_PC")]
		public EntitySet<CHITTIETCHUYENHANG> CHITTIETCHUYENHANGs
		{
			get
			{
				return this._CHITTIETCHUYENHANGs;
			}
			set
			{
				this._CHITTIETCHUYENHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITTIETCHUYENHANGs(CHITTIETCHUYENHANG entity)
		{
			this.SendPropertyChanging();
			entity.YEUCAUCHUYENHANG = this;
		}
		
		private void detach_CHITTIETCHUYENHANGs(CHITTIETCHUYENHANG entity)
		{
			this.SendPropertyChanging();
			entity.YEUCAUCHUYENHANG = null;
		}
	}
}
#pragma warning restore 1591
